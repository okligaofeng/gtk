<?xml version="1.0" encoding="UTF-8"?>
<interface>
  <!-- interface-requires gtk+ 3.6 -->
  <object class="GtkWindow" id="window">
    <property name="default-width">640</property>
    <property name="default-height">480</property>
    <child type="titlebar">
      <object class="GtkHeaderBar">
        <property name="title" translatable="yes">Shadertoy</property>
        <property name="show-close-button">1</property>
        <child>
          <object class="GtkButton" id="rewind">
            <property name="icon-name">media-skip-backward-symbolic</property>
          </object>
        </child>
        <child>
          <object class="GtkButton" id="play">
            <property name="icon-name">media-playback-start-symbolic</property>
          </object>
        </child>
        <child>
          <object class="GtkLabel" id="time">
            <property name="margin-start">20</property>
          </object>
        </child>
      </object>
    </child>
    <child>
      <object class="GtkPaned" id="content">
        <property name="orientation">vertical</property>
        <property name="position">240</property>
        <child>
          <object class="GtkScrolledWindow">
            <property name="expand">1</property>
            <child>
              <object class="GtkTextView" id="text">
                <property name="buffer">buffer</property>
                <property name="top-margin">10</property>
                <property name="bottom-margin">10</property>
                <property name="left-margin">10</property>
                <property name="right-margin">10</property>
              </object>
            </child>
          </object>
        </child>
      </object>
    </child>
  </object>
  <object class="GtkTextBuffer" id="buffer">
    <property name="text">#version 420 core

layout(location = 0) in vec2 iPos;
layout(location = 1) in float iTime;
layout(location = 2) in vec2 iResolution;

layout(location = 0) out vec4 color;

void
mainImage (out vec4 fragColor, in vec2 fragCoord)
{
  vec2 uv = fragCoord.xy / iResolution.xy;
  fragColor = vec4(uv,0.5+0.5*sin(iTime),1.0);
}

void main()
{
  mainImage (color, iPos);
}
</property>
  </object>
</interface>
